---
- name: Ustal główną wersję EL (8/9)
  ansible.builtin.set_fact:
    el_major: "{{ (ansible_facts.distribution_major_version | default(0) | int) if (ansible_facts.os_family | lower) == 'redhat' else 0 }}"

- name: Sprawdź wsparcie systemu
  ansible.builtin.assert:
    that:
      - (ansible_facts.os_family | lower) == 'redhat'
      - (el_major | int) in [8, 9]
    fail_msg: "Ta rola wspiera wyłącznie rodzinę RHEL (EL) w wersjach 8 i 9."
    success_msg: "System wspierany: EL {{ el_major }}"

- name: Importuj Primary RabbitMQ signing key
  ansible.builtin.rpm_key:
    state: present
    key: "{{ rabbitmq_repo_primary_signing_key_url }}"

- name: Importuj Cloudsmith repo metadata key (Erlang)
  ansible.builtin.rpm_key:
    state: present
    key: "{{ rabbitmq_repo_erlang_repo_key_url }}"

- name: Importuj Cloudsmith repo metadata key (RabbitMQ Server)
  ansible.builtin.rpm_key:
    state: present
    key: "{{ rabbitmq_repo_server_repo_key_url }}"

# Erlang: repo dla arch
- name: Dodaj repozytorium Erlang (arch)
  ansible.builtin.yum_repository:
    name: rabbitmq_erlang
    description: "RabbitMQ Erlang (arch) for EL {{ el_major }}"
    baseurl: "{{ rabbitmq_repo_erlang_baseurls }}"
    enabled: "{{ rabbitmq_repo_enabled }}"
    gpgcheck: "{{ rabbitmq_repo_gpgcheck }}"
    repo_gpgcheck: "{{ rabbitmq_repo_repo_gpgcheck }}"
    gpgkey: "{{ rabbitmq_repo_erlang_repo_key_url }}"
    sslverify: "{{ rabbitmq_repo_sslverify }}"
    sslcacert: "{{ rabbitmq_repo_sslcacert }}"
    metadata_expire: "{{ rabbitmq_repo_metadata_expire }}"
    module_hotfixes: "{{ rabbitmq_repo_module_hotfixes }}"
    state: present
  notify: Refresh package metadata

# Erlang: repo noarch (Z OBU kluczami – erlang + primary)
- name: Dodaj repozytorium Erlang (noarch)
  ansible.builtin.yum_repository:
    name: rabbitmq_erlang_noarch
    description: "RabbitMQ Erlang (noarch) for EL {{ el_major }}"
    baseurl: "{{ rabbitmq_repo_erlang_noarch_baseurls }}"
    enabled: "{{ rabbitmq_repo_enabled }}"
    gpgcheck: "{{ rabbitmq_repo_gpgcheck }}"
    repo_gpgcheck: "{{ rabbitmq_repo_repo_gpgcheck }}"
    gpgkey:
      - "{{ rabbitmq_repo_erlang_repo_key_url }}"
      - "{{ rabbitmq_repo_primary_signing_key_url }}"
    sslverify: "{{ rabbitmq_repo_sslverify }}"
    sslcacert: "{{ rabbitmq_repo_sslcacert }}"
    metadata_expire: "{{ rabbitmq_repo_metadata_expire }}"
    module_hotfixes: "{{ rabbitmq_repo_module_hotfixes }}"
    state: present
  notify: Refresh package metadata

# RabbitMQ Server: repo dla arch
- name: Dodaj repozytorium RabbitMQ Server (arch)
  ansible.builtin.yum_repository:
    name: rabbitmq_server
    description: "RabbitMQ Server (arch) for EL {{ el_major }}"
    baseurl: "{{ rabbitmq_repo_server_baseurls }}"
    enabled: "{{ rabbitmq_repo_enabled }}"
    gpgcheck: "{{ rabbitmq_repo_gpgcheck }}"
    repo_gpgcheck: "{{ rabbitmq_repo_repo_gpgcheck }}"
    gpgkey: "{{ rabbitmq_repo_server_repo_key_url }}"
    sslverify: "{{ rabbitmq_repo_sslverify }}"
    sslcacert: "{{ rabbitmq_repo_sslcacert }}"
    metadata_expire: "{{ rabbitmq_repo_metadata_expire }}"
    module_hotfixes: "{{ rabbitmq_repo_module_hotfixes }}"
    state: present
  notify: Refresh package metadata

# RabbitMQ Server: repo noarch (Z OBU kluczami – server + primary)
- name: Dodaj repozytorium RabbitMQ Server (noarch)
  ansible.builtin.yum_repository:
    name: rabbitmq_server_noarch
    description: "RabbitMQ Server (noarch) for EL {{ el_major }}"
    baseurl: "{{ rabbitmq_repo_server_noarch_baseurls }}"
    enabled: "{{ rabbitmq_repo_enabled }}"
    gpgcheck: "{{ rabbitmq_repo_gpgcheck }}"
    repo_gpgcheck: "{{ rabbitmq_repo_repo_gpgcheck }}"
    gpgkey:
      - "{{ rabbitmq_repo_server_repo_key_url }}"
      - "{{ rabbitmq_repo_primary_signing_key_url }}"
    sslverify: "{{ rabbitmq_repo_sslverify }}"
    sslcacert: "{{ rabbitmq_repo_sslcacert }}"
    metadata_expire: "{{ rabbitmq_repo_metadata_expire }}"
    module_hotfixes: "{{ rabbitmq_repo_module_hotfixes }}"
    state: present
  notify: Refresh package metadata
...